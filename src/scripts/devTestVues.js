/**
 * Script de dÃ©veloppement pour tester le service de vues
 * Ã€ ajouter temporairement dans Layout.astro pour les tests
 */

// Charger les tests uniquement en dÃ©veloppement
if (import.meta.env.DEV) {
  import("../utils/testVuesService.js")
    .then((module) => {
      console.log("ðŸ§ª Tests de vues chargÃ©s en mode dÃ©veloppement");

      // Optionnel: exÃ©cuter automatiquement un test de base
      // module.afficherDebugInfo();
    })
    .catch((err) => {
      console.log("Erreur lors du chargement des tests:", err);
    });
}

// Fonction pour monitorer les vues en temps rÃ©el (en dÃ©veloppement)
if (import.meta.env.DEV) {
  let vueCount = 0;

  // Observer les changements de page
  const originalPushState = history.pushState;
  const originalReplaceState = history.replaceState;

  history.pushState = function (...args) {
    vueCount++;
    console.log(
      `ðŸ”„ Navigation dÃ©tectÃ©e (#${vueCount}):`,
      args[2] || window.location.pathname
    );
    return originalPushState.apply(history, args);
  };

  history.replaceState = function (...args) {
    console.log(
      `ðŸ”„ Remplacement d'Ã©tat dÃ©tectÃ©:`,
      args[2] || window.location.pathname
    );
    return originalReplaceState.apply(history, args);
  };

  // Observer les changements de hash
  window.addEventListener("hashchange", function (e) {
    console.log(`ðŸ”„ Changement de hash dÃ©tectÃ©:`, e.newURL);
  });
}
